/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>// Layer aliases
#define DEF 0
#define NUM 1
#define SYM 2
#define FUN 3// Behavior configuration
&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

/ {
    behaviors {
        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        as: alpha_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_SFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    /*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────╮ 30  31  32 │ │ 32  33  34 ╭───────╯
          ╰────────────╯ ╰────────────╯            */

    combos {
        compatible = "zmk,combos";

        semi {
            bindings = <&kp SEMI>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            label = "DEF";
            bindings = <
               &kp Q       &kp W         &kp E        &kp R      &kp T            &kp Y   &kp U         &kp I    &kp O             &kp P
         &am LCTRL A  &am LALT S    &am LGUI D  &as LSHFT F      &kp G            &kp H   &kp J         &kp K    &kp L  &kp SINGLE_QUOTE
               &kp Z       &kp X         &kp C        &kp V      &kp B            &kp N   &kp M     &kp COMMA  &kp DOT          &kp FSLH
                                  &mt LGUI TAB        &mo 1  &kp SPACE          &kp RET   &mo 2  &mt RALT DEL
            >;
        };

        NUM {
            label = "NUM";
            bindings = <
             &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                &kp N6    &kp N7    &kp N8  &kp N9     &kp N0
         &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
             &trans        &trans        &trans        &trans        &trans                &trans    &trans    &trans  &trans     &trans
                                   &mt LGUI TAB        &trans     &kp SPACE               &kp RET    &trans  &kp RALT
            >;
        };

        SYM {
            label = "SYM";
            bindings = <
         &kp EXCL  &kp AT      &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR
           &trans  &trans        &trans    &trans     &trans          &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH
           &trans  &trans        &trans    &trans  &kp GRAVE          &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE
                           &mt LGUI TAB    &trans  &kp SPACE            &kp RET     &trans         &kp RALT
            >;
        };

        FUN {
            label = "FUN";
            bindings = <
         &kp F1  &kp F2        &kp F3  &kp F4     &kp F5           &trans  &trans    &trans  &trans  &trans
         &kp F6  &kp F7        &kp F8  &kp F9    &kp F10           &trans  &trans    &trans  &trans  &trans
         &trans  &trans        &trans  &trans     &trans           &trans  &trans    &trans  &trans  &trans
                         &mt LGUI TAB  &trans  &kp SPACE          &kp RET  &trans  &kp RALT
            >;
        };
    };
};
