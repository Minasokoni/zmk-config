/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/mouse.h>

// Layer aliases
#define DEF 0
#define NUM 1
#define SYM 2
#define FUN 3
//#define MOU 4

#include "combos.dtsi"

&mt {
    tapping-term-ms = <150>;
    quick_tap_ms = <0>;
    flavor = "hold-preferred";
};

&lt {
    tapping-term-ms = <150>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

/ {
    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

    behaviors {

        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        as: alpha_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_SFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <28 29>;
            timeout-ms = <40>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
            timeout-ms = <40>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            // ------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //             | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
                &td Q ESC       &kp W       &kp E         &kp R      &kp T                     &kp Y   &kp U          &kp I    &kp O                  &kp P
          &am LCTRL A  &am LALT S  &am LGUI D  &as LSHIFT F      &kp G                     &kp H   &kp J          &kp K    &kp L  &td SINGLE_QUOTE SEMI
         &as LSHIFT Z       &kp X       &kp C         &kp V      &kp B                     &kp N   &kp M      &kp COMMA  &kp DOT               &kp FSLH
                                     &kp LGUI         &mo 1  &kp SPACE          &am RSHIFT ENTER   &mo 2  &kp BACKSPACE
            >;
        };

        number_layer {
            label = "NUM";
            // -----------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
            // | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
            // |     |     |     |     |     |   |     |     |     |     |     |
            //             | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
               &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6    &kp N7         &kp N8     &kp N9  &kp N0
         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &kp LEFT  &kp DOWN         &kp UP  &kp RIGHT  &trans
           &bt BT_CLR        &trans        &trans        &trans        &trans            &trans    &trans         &trans     &trans  &trans
                                         &kp LGUI        &trans     &kp SPACE           &kp RET    &trans  &kp BACKSPACE
            >;
        };

        symbols_layer {
            label = "SYM";
            // -----------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
            // |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
            //             | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
         &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR
           &trans  &trans    &trans    &trans     &trans          &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH
           &trans  &trans    &trans    &trans     &trans          &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE
                           &kp LGUI    &trans  &kp SPACE            &kp RET     &trans    &kp BACKSPACE
            >;
        };

        function_layer {
            label = "FUN";
            // -----------------------------------------------------------------
            // |  F1 |  F2 |  F3 |  F4 |  F5 |   |     |     |     |     |     |
            // |  F6 |  F7 |  F8 |  F9 | F10 |   | PREV| VOLD| VOLU| NEXT|     |
            // | F11 | F12 |     |     |     |   |     |     |     |     |     |
            //             |     |     | PLAY|   |     |     |     |
            bindings = <
          &kp F1   &kp F2  &kp F3  &kp F4   &kp F5          &trans  &trans  &trans  &trans  &trans
          &kp F6   &kp F7  &kp F8  &kp F9  &kp F10          &kp C_PREVIOUS  &kp C_VOL_DOWN  &kp C_VOL_UP  &kp C_NEXT  &trans
         &kp F11  &kp F12  &trans  &trans   &trans          &trans  &trans  &trans  &trans  &trans
                           &trans  &trans   &kp C_PLAY_PAUSE          &trans  &trans  &trans
            >;
        };

        // mouse_layer {
        //     label = "MOU";
        //     // -----------------------------------------------------------------
        //     // |  F1 |  F2 |  F3 |  F4 |  F5 |   |     |     |     |     |     |
        //     // |  F6 |  F7 |  F8 |  F9 | F10 |   |     |     |     |     |     |
        //     // | F11 | F12 |     |     |     |   |     |     |     |     |     |
        //     //             |     |     |     |   |     |     |     |
        //     bindings = <
        //   &kp F1   &kp F2  &kp F3  &kp F4   &kp F5          &trans  &trans  &trans  &trans  &trans
        //   &kp F6   &kp F7  &kp F8  &kp F9  &kp F10          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
        //  &kp F11  &kp F12  &trans  &trans   &trans          &trans  &trans  &trans  &trans  &trans
        //                    &trans  &trans   &trans          &trans  &trans  &trans
        //     >;
        // };
    };
};
